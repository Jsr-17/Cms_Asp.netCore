// <auto-generated />
using System;
using CMS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CMS.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    partial class AplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CMS.Models.DataUser", b =>
                {
                    b.Property<int>("Data_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Data_Id");

                    b.ToTable("DataUsers");

                    b.HasData(
                        new
                        {
                            Data_Id = 1,
                            CreatedDate = new DateTime(2024, 5, 11, 19, 33, 41, 574, DateTimeKind.Local).AddTicks(4868),
                            Description = "Descripción 1",
                            Image = "imagen1.jpg",
                            Title = "Título 1"
                        },
                        new
                        {
                            Data_Id = 2,
                            CreatedDate = new DateTime(2024, 5, 11, 19, 33, 41, 574, DateTimeKind.Local).AddTicks(4957),
                            Description = "Descripción 2",
                            Image = "imagen2.jpg",
                            Title = "Título 2"
                        },
                        new
                        {
                            Data_Id = 3,
                            CreatedDate = new DateTime(2024, 5, 11, 19, 33, 41, 574, DateTimeKind.Local).AddTicks(4961),
                            Description = "Descripción 3",
                            Image = "imagen3.jpg",
                            Title = "Título 3"
                        },
                        new
                        {
                            Data_Id = 4,
                            CreatedDate = new DateTime(2024, 5, 11, 19, 33, 41, 574, DateTimeKind.Local).AddTicks(4965),
                            Description = "Descripción 4",
                            Image = "imagen4.jpg",
                            Title = "Título 4"
                        });
                });

            modelBuilder.Entity("CMS.Models.User", b =>
                {
                    b.Property<int>("User_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("Data_Id")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("User_Id");

                    b.HasIndex("Data_Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            User_Id = 1,
                            Age = 25,
                            Data_Id = 1,
                            Email = "usuario1@example.com",
                            Name = "Usuario 1",
                            Password = "password1",
                            UserName = "user1"
                        },
                        new
                        {
                            User_Id = 2,
                            Age = 30,
                            Data_Id = 2,
                            Email = "usuario2@example.com",
                            Name = "Usuario 2",
                            Password = "password2",
                            UserName = "user2"
                        },
                        new
                        {
                            User_Id = 3,
                            Age = 35,
                            Data_Id = 3,
                            Email = "usuario3@example.com",
                            Name = "Usuario 3",
                            Password = "password3",
                            UserName = "user3"
                        },
                        new
                        {
                            User_Id = 4,
                            Age = 40,
                            Data_Id = 4,
                            Email = "usuario4@example.com",
                            Name = "Usuario 4",
                            Password = "password4",
                            UserName = "user4"
                        });
                });

            modelBuilder.Entity("CMS.Models.User", b =>
                {
                    b.HasOne("CMS.Models.DataUser", "Data")
                        .WithMany()
                        .HasForeignKey("Data_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Data");
                });
#pragma warning restore 612, 618
        }
    }
}
